default role: client
code:  |
  multi_user = True
  reviewer_email = "jmorris@ualberta.ca"
  role = 'client'
  if user_logged_in() and user_info().email == reviewer_email:
    role = 'reviewer'
---
objects:
  - user: Individual
  - user.assets: Value
  - user.income: Value 
  - cohabitants: DAList.using(object_type=Individual, complete_attribute="complete") 
  - cohabitants[i].assets: Value
  - cohabitants[i].income: Value
---
code:  |
  cohabitants[i].assets.value
  cohabitants[i].complete = True
---
mandatory: true
code:  |

  user.name.first
  user.name.last
  user.assets.value
  if len(cohabitants) < 0:
    cohabitants
  
  if not afford_lawyer:
    if have_lawyer:
      if_lawyer_still_here
  
  if not appeal_legal_aid:
    family_law
    criminal_law
    live_in_alberta
    legal_in_alberta
    
  date_of_inquiry
  user.signature
  
  request
  request_notification_sent
  reviewer_response
  response_notification_sent
---
role: 
  - client
  - reviewer
event: final_screen
question: Here is the advice memo. Please print it or email it to yourself. 
attachment: 
  - name: Legal Aid Document
    filename: legal_aid_inquiry_doc
    variable name: legal_aid_inquiry_doc
    content:  |
    
      Hello ${ user }
      
      Below are information you have entered for this self assessment:
      
            Financial Information:
      
      * You indicated that your income for the last 30 days was ${ user.income.value_last30 } and for the last year was ${ user.income.value_lastyear }.
      
      % if len(cohabitants) > 0:
      * Below are financial information you entered for your family members.
      % for j in cohabitants: 
        % if j.income.exists:
        ${ j } made ${ j.income.value_last30 } in the last 30 days and ${ j.income.value_lastyear } in the last year. 
        % endif
      % endfor
      % else:
      You indicated that you do not have any family members.
      % endif
      
      Family Information:
      
      % if len(cohabitants) > 0: 
      * You live with the following people: ${ cohabitants }. 
      * For the purpose of calculating financial eligibility, your family size will be deemed to be ${ family_size }.
      % else: 
      * You do not live with anyone. For the purpose of calculating financial eligibility, your family size will be deemed as one (1). 
      % endif
      
      % if financially_eligible:
      * Based on the financial information you have entered, you are financially eligible for Alberta Legal Aid. 
      % elif marginally_financially_eligible:
      * Based on the financial information you have entered, you are marginally financially eligible for Alberta Legal Aid. 
      % elif financially_ineligible:
      * Based on the financial information you have entered, you are financially ineligible for Alberta Legal Aid. 
      % endif
      
      Legal Information:

      % if afford_lawyer:
      * You indicated that you have sufficient income to afford a lawyer. 
      % else:
        % if have_lawyer:
          You indicated that you have a lawyer. You also indicated that the lawyer is still acting on your behalf as ${ if_lawyer_still_here }.
        % else:
          You indicated you do not have a lawyer. 
        % endif
      % endif

      % if appeal_legal_aid:
      * You indicated that you had received Legal Aid Alberta's assistance with this legal matter. 
      % else:
      * You indicated that your matter is a family law matter as ${ family_law }.
      * You indicated that your matter is a criminal law matter as ${ criminal_law }.
      * You indicated that you live in Alberta = ${ live_in_alberta }.
      * You indicated that your legal matter is in Alberta as ${ legal_in_alberta }.
      % endif 
      
      % if eligible_legal_aid:
      Based on the information you entered above, you qualify for Legal Aid assistance. Please contact us for next steps at Phone/email. 
      % else: 
      Based on the information you entered above, you do no qualify for Legal Aid assistance. If you wish to seek clarification or additional assistance please contact us at Phone/email. 
      % endif 
    
      Date of inquiry ${ format_date(date_of_inquiry, format='EEEE, MMMM d, yyyy') }, which can also be written as ${ format_date(date_of_inquiry, format="yyyy-MM-dd") }. 
      
      
      ${ user.signature }
      Please sign
---
# below is general user and cohab information and date
---
generic object:  Individual
question:  |
  What is ${ x.object_possessive('name') }?
fields:
  - First Name: x.name.first
  - Last Name: x.name.last
---
question:  |
  Please enter the following financial information regarding ${ cohabitants[i] }.
fields:
  - Amount of asset owned by ${ cohabitants[i] }?: cohabitants[i].assets.value
    datatype: currency
  - Do they have income?: cohabitants[i].income.exists
    datatype: yesnowide
  - What was their income for the last 30 days?: cohabitants[i].income.value_last30
    datatype: currency
    show if: cohabitants[i].income.exists
  - What was their income for the last year?: cohabitants[i].income.value_lastyear
    datatype: currency
    show if: cohabitants[i].income.exists
---
question:  |
  Please enter the following financial information about yourself.
fields:
  - Amount of asset owned by you?: user.assets.value
    datatype: currency
  - Do you have any income?: user.income.exists
    datatype: yesnowide
  - How much did you make in the last 30 days?: user.income.value_last30
    datatype: currency
    min: 0
    show if: user.income.exists
  - How much did you make in the last year?: user.income.value_lastyear
    datatype: currency
    min: 0
    show if: user.income.exists
---
question:  Do you live with anyone?
yesno:  cohabitants.there_are_any
---
question:  Do you live with anyone else?
yesno:  cohabitants.there_is_another
---
reconsider: True
code:  |
  family_size = len(cohabitants) + 1
---
question:  What is the date of inquiry (today's date)? 
fields: 
  - Date of inquiry: date_of_inquiry
    datatype: date 
---
question:  Please sign
signature:  user.signature 
# below are qualification questions
---
question:  Do you have a lawyer?
yesno:  have_lawyer
---
question:  Do you have enough income to seek assistance from a lawyer?
yesno:  afford_lawyer
---
question: If you have a lawyer working on your file or have approached a lawyer seeking assistance for your file, is that lawyer currently acting on your behalf for this matter?
yesno: if_lawyer_still_here
---
question: Is your legal matter located in Alberta?
yesno: legal_in_alberta
---
question: Is your legal matter a family law matter?
yesno: family_law
---
question: Is your legal matter a criminal law matter?
yesno: criminal_law 
---
question: Is your matter an appeal of a matter that you received assistance from Legal Aid Alberta?
yesno: appeal_legal_aid
---
question: Do you live in Alberta? 
yesno: live_in_alberta
---
# below are codes for rules and determining eligibility 
---
reconsider: True
code:  |
  if afford_lawyer or if_lawyer_still_here:
    satisfy_unrepresented = False
  else:
    satisfy_unrepresented = True
---
reconsider: True
code:  |
  if live_in_alberta:
    satisfy_residency = True
  else:
    satisfy_residency = False
---
reconsider: True
code:  |
  if ((family_law or criminal_law) and legal_in_alberta) or appeal_legal_aid:
    matter_within_assistance_range = True
  else:
    matter_within_assistance_range = False
---
reconsider: True
code:  |
  if (satisfy_unrepresented and appeal_legal_aid and (financially_eligible or marginally_financially_eligible)) or (satisfy_unrepresented and satisfy_residency and matter_within_assistance_range and (financially_eligible or marginally_financially_eligible)):
    eligible_legal_aid = True
  else:
    eligible_legal_aid = False
---
reconsider: True
code:  |
  total_income_last30 = 0
  for j in cohabitants:
    if j.income.exists:
      total_income_last30 = total_income_last30 + j.income.value_last30 + user.income.value_last30
    else:
      total_income_last30 = total_income_last30 + user.income.value_last30
---
reconsider: True
code:  |
  total_income_lastyear = 0
  for j in cohabitants:
    if j.income.exists:
      total_income_lastyear = total_income_lastyear + j.income.value_lastyear + user.income.value_lastyear
    else:
      total_income_lastyear = total_income_lastyear + user.income.value_lastyear
---
reconsider: True
code:  |
  financially_eligible = False
  marginally_financially_eligible = False
  financially_ineligible = False
  if family_size == 1 and (total_income_last30 <= 1668 and total_income_lastyear <= 20021):
    financially_eligible =  True
  elif family_size == 1 and (total_income_last30 <= 1834.8 and total_income_lastyear <= 22023.1):
    marginally_financially_eligible =  True
  elif family_size == 1 and (total_income_last30 > 1834.8 and total_income_lastyear > 22023.1):
    financially_ineligible =  True
  elif family_size == 2 and (total_income_last30 <= 2066 and total_income_lastyear <= 24788):
    financially_eligible = True
  elif family_size == 2 and (total_income_last30 <= 2272.6 and total_income_lastyear <= 27266.8):
    marginally_financially_eligible = True
  elif family_size == 2 and (total_income_last30 > 2272.6 and total_income_lastyear > 27266.8):
    financially_ineligible = True
  elif family_size == 3 and (total_income_last30 <= 2940 and total_income_lastyear <= 35275):
    financially_eligible = True
  elif family_size == 3 and (total_income_last30 <= 3234 and total_income_lastyear <= 38802.5):
    marginally_financially_eligible = True
  elif family_size == 3 and (total_income_last30 > 3234 and total_income_lastyear > 38802.5):
    financially_ineligible = True
  elif family_size == 4 and (total_income_last30 <= 3178 and total_income_lastyear <= 38134):
    financially_eligible = True
  elif family_size == 4 and (total_income_last30 <= 3495.8 and total_income_lastyear <= 41947.4):
    marginally_financially_eligible = True
  elif family_size == 4 and (total_income_last30 > 3495.8 and total_income_lastyear > 41947.4):
    financially_ineligible = True
  elif family_size == 5 and (total_income_last30 <= 3416 and total_income_lastyear <= 40995):
    financially_eligible = True
  elif family_size == 5 and (total_income_last30 <= 3757.6 and total_income_lastyear <= 45094.5):
    marginally_financially_eligible = True
  elif family_size == 5 and (total_income_last30 > 3757.6 and total_income_lastyear > 45094.5):
    financially_ineligible = True
  elif family_size >= 6 and (total_income_last30 <= 3655 and total_income_lastyear <= 43855):
    financially_eligible = True
  elif family_size >= 6 and (total_income_last30 <= 4020.5 and total_income_lastyear <= 48240.5):
    marginally_financially_eligible = True
  elif family_size >= 6 and (total_income_last30 > 4020.5 and total_income_lastyear > 48240.5):
    financially_ineligible = True
---
# Multi user code blocks
---
code:  |
  request_notification_sent = send_email(to=reviewer_email,template=request_notification, attachments=[legal_aid_inquiry_doc])
---
code:  |
  response_notification_sent = send_email(to=email_address,template=response_notification)
---
template: request_notification
subject: New Request # this is the subject for the email
content:  |
  THe client has requested something, [click here](${ interview_url() }) to review the document and repond to their request.
---
template: response_notification
subject: response received 
content:  |
  your reviewer has provided an answer, [click here](${ interview_url() }) to view it. 
---
event: role_event
question: Waiting on another user
subquestion:  |
  you are not authorized to look at the next screen of this interview.
  
  % if 'client' in role_needed: 
  we are waiting for the client, and you are a reviewer.
  % elif 'reviewer' in role_needed:
  we are waiting for the reviewer, and you are the client. 
  % endif
  
  please have the other party fo to [this link](${ interview_url() }) to continue. 
buttons:
  - Check: refresh
---
question:  Please enter your email address and the nature of the request. 
fields:
  - Email: email_address
  - request: request
---
role: reviewer
question: response # should only be viewed by reviewer
subquestion:  |
  the client said ${ request }. DO you approve?.
yesno: reviewer_response